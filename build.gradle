buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
		maven {
			url "http://dl.bintray.com/jetbrains/spek"
		}
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
	}
}

plugins {
	id "com.jfrog.bintray" version "1.7.3"
	id 'com.github.ben-manes.versions' version '0.13.0'
	id "com.github.johnrengelman.shadow" version "1.2.3"
//		id "com.github.hierynomus.license" version "0.13.1"
}

allprojects {

	group 'io.gitlab.arturbosch.detekt'
	version "$detektVersion"

	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://dl.bintray.com/jetbrains/spek" }
		maven { url "http://dl.bintray.com/arturbosch/code-analysis" }
	}

	apply plugin: 'org.junit.platform.gradle.plugin'
	apply plugin: 'kotlin'
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'com.github.ben-manes.versions'
//	apply plugin: 'com.github.hierynomus.license'

	if (it.name.startsWith("detekt-cli")) {
		apply plugin: 'application'
		apply plugin: 'com.github.johnrengelman.shadow'
	}

	junitPlatform {
		engines {
			include 'spek', "junit-jupiter"
		}
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				repository(url: uri('../repo'))
			}
		}
	}

	bintray {
		user = System.getenv("BINTRAY_USER") ?: ""
		key = System.getenv("BINTRAY_API_KEY") ?: ""
		publications = ["DetektPublication"]

		pkg {
			repo = 'code-analysis'
			name = 'detekt'
			userOrg = 'arturbosch'
			licenses = ['Apache-2.0']
			vcsUrl = "https://github.com/arturbosch/detekt"

			version {
				name = project.version
				released = new Date()
			}
		}
	}

	publishing {
		publications {
			DetektPublication(MavenPublication) {
				from components.java
				groupId project.group
				artifactId project.name
				version project.version
			}
		}
	}

	configurations {
		kotlinCompile
		kotlinTest
		junitPlatform
	}

	dependencies {
		kotlinCompile "org.jetbrains.kotlin:kotlin-compiler:$kotlinVersion"
		kotlinTest "org.junit.jupiter:junit-jupiter-api:$junitEngineVersion"
		kotlinTest "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
		kotlinTest "org.assertj:assertj-core:$assertjVersion"
		kotlinTest "org.jetbrains.spek:spek-api:$spekVersion"
		kotlinTest "org.junit.jupiter:junit-jupiter-engine:$junitEngineVersion"
		junitPlatform "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
		junitPlatform "org.junit.platform:junit-platform-console:$junitPlatformVersion"
		junitPlatform "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
	}
}

configurations {
	detekt
}

dependencies {
	detekt 'io.gitlab.arturbosch.detekt:detekt-cli:1.0.0.M7.b1'
	detekt 'io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0.M7.b1'
}

task detekt(type: JavaExec) {
	main = "io.gitlab.arturbosch.detekt.cli.Main"
	classpath = configurations.detekt
	def input = "$project.projectDir.absolutePath"
	def config = "$project.projectDir/default-detekt-config.yml"
	def filters = ".*test.*"
	def rulesets = ""
	def params = ['-p', input, '-c', config, '-f', filters, '-r', rulesets]
	args(params)
}
